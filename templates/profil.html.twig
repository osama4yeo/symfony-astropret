{# --- FICHIER TEMPLATE POUR LA PAGE DE PROFIL UTILISATEUR --- #}
{# templates/profil.html.twig #}

{# üèõÔ∏è On h√©rite de la structure globale du site d√©finie dans 'base.html.twig'. #}
{% extends 'base.html.twig' %}

{# ‚úèÔ∏è D√©finit le titre de la page pour l'onglet du navigateur. #}
{% block title %}Mon profil{% endblock %}

{# üìù D√©but du contenu principal de la page. #}
{% block body_content %}
    {# 'container' centre le contenu, 'mt-4' ajoute une marge en haut. C'est pour une mise en page propre. #}
    <div class="container mt-4">
        <h1 class="mb-4">Mon profil</h1> {# 'mb-4' ajoute une marge en bas du titre. #}

        {# --- AFFICHAGE DES MESSAGES FLASH (notifications) --- #}
        {# ‚úÖ C'est une excellente pratique. Ce 'include' va chercher un autre fichier Twig qui g√®re l'affichage des messages
           comme "Votre profil a √©t√© mis √† jour avec succ√®s.". 'ignore missing' √©vite une erreur si le fichier n'existe pas. #}
        {% include 'partials/_flash_messages.html.twig' ignore missing %}
        {# --- FIN DE L'AJOUT --- #}

        {# --- BLOC PRINCIPAL: V√âRIFICATION DE L'UTILISATEUR CONNECT√â --- #}
        {# üõ°Ô∏è On v√©rifie que la variable 'user' existe. C'est une s√©curit√© fondamentale.
           Si la route est prot√©g√©e dans le contr√¥leur (ex: avec #[IsGranted('ROLE_USER')]), cette condition est toujours vraie. #}
        {% if user %}
            {# On utilise une carte Bootstrap pour pr√©senter les informations de mani√®re √©l√©gante. #}
            {# 'mx-auto' centre la carte horizontalement, 'max-width' l'emp√™che d'√™tre trop large sur de grands √©crans. #}
            <div class="card mx-auto" style="max-width: 400px;">
                <div class="card-body text-center"> {# 'text-center' centre tout le contenu de la carte. #}

                    {# --- AFFICHAGE DE L'AVATAR --- #}
                    {# On v√©rifie si un avatar personnalis√© a √©t√© t√©l√©vers√©. #}
                    {% if user.avatar %}
                        {# Si oui, on l'affiche. 'asset()' g√©n√®re le chemin public correct. #}
                        {# La concat√©nation '~' assemble le chemin du dossier avec le nom du fichier de l'avatar. #}
                        <img src="{{ asset('uploads/avatars/' ~ user.avatar) }}" class="avatar-img mb-3" alt="Mon avatar" loading="lazy">
                    {% else %}
                        {# Sinon, on affiche une image par d√©faut. #}
                        <img src="{{ asset('images/default-avatar-icon-of-social-media-user-vector.jpg') }}" class="avatar-img mb-3" alt="Avatar par d√©faut" loading="lazy">
                    {% endif %}

                    {# --- AFFICHAGE DES INFORMATIONS TEXTUELLES --- #}
                    {# üõ°Ô∏è S√âCURIT√â : Twig "√©chappe" automatiquement les variables. Si un utilisateur a un nom comme "<script>...", il sera affich√© comme du texte et non ex√©cut√©. #}
                    {# ‚úÖ ROBUSTESSE : Le filtre '| default('')' emp√™che une erreur si user.prenom ou user.nom est null, en affichant une cha√Æne vide √† la place. #}
                    <h5 class="card-title">{{ user.prenom | default('') }} {{ user.nom | default('') }}</h5>
                    <p class="card-text">{{ user.email }}</p>
                    
                    {# Exemples comment√©s pour afficher d'autres informations de mani√®re s√©curis√©e et robuste. #}
                    {# <p class="card-text">T√©l√©phone : {{ user.telephone | default('Non renseign√©') }}</p> #}
                    {# <p class="card-text">N√©(e) le : {{ user.dateNaissance ? user.dateNaissance|date('d/m/Y') : 'Non renseign√©' }}</p> #}
                    {# L'expression 'variable ? valeur_si_vrai : valeur_si_faux' est un op√©rateur ternaire, tr√®s pratique. #}

                    {# --- BOUTONS D'ACTION --- #}
                    {# 'd-flex justify-content-center' centre les boutons. 'gap-2' ajoute un petit espace entre eux. 'mt-4' les √©loigne du texte au-dessus. #}
                    <div class="d-flex justify-content-center gap-2 mt-4">
                        {# Le lien pour modifier le profil. 'path()' est la m√©thode correcte pour g√©n√©rer des URL en Symfony. #}
                        <a href="{{ path('user_profile_edit') }}" class="btn btn-primary">Modifier mon profil</a>
                        {# Le lien de d√©connexion. 'btn-outline-danger' est un style plus discret pour une action secondaire. #}
                        <a href="{{ path('app_logout') }}" class="btn btn-outline-danger">Se d√©connecter</a>
                    </div>
                </div>
            </div>
        {# --- CAS O√ô L'UTILISATEUR N'EST PAS CONNECT√â --- #}
        {# Ce bloc est une s√©curit√© suppl√©mentaire. Il ne devrait pas s'afficher si la route est bien prot√©g√©e c√¥t√© serveur. #}
        {% else %}
            <div class="alert alert-warning" role="alert">
                Vous devez √™tre connect√© pour voir cette page.
            </div>
            <a href="{{ path('app_login') }}" class="btn btn-primary">Se connecter</a>
            <a href="{{ path('app_register') }}" class="btn btn-outline-secondary ms-2">Cr√©er un compte</a>
        {% endif %}
    </div>
{% endblock body_content %}

{# --- BLOC POUR LES STYLES CSS SP√âCIFIQUES √Ä CETTE PAGE --- #}
{% block stylesheets %}
    {# On n'oublie jamais 'parent()' pour h√©riter des styles globaux. #}
    {{ parent() }}
    <style>
        .avatar-img {
            width: 150px;           /* Largeur fixe de l'image. */
            height: 150px;          /* Hauteur fixe pour former un carr√© parfait. */
            object-fit: cover;      /* Garantit que l'image remplit le carr√© sans √™tre d√©form√©e (essentiel pour les avatars). */
            border-radius: 50%;     /* Transforme le carr√© en cercle parfait. */
            border: 3px solid #eee; /* Ajoute une petite bordure grise claire pour un effet soign√©. */
        }
    </style>
{% endblock %}