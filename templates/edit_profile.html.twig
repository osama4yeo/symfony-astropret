{# --- FICHIER TEMPLATE POUR LE FORMULAIRE DE MODIFICATION DE PROFIL --- #}
{% extends 'base.html.twig' %}

{% block title %}Modifier mon profil{% endblock %}

{% block body_content %}
    <div class="container mt-4">
        <h1 class="mb-4">Modifier mon profil</h1>

        {# --- AFFICHAGE DES MESSAGES FLASH --- #}
        {# Affiche les messages de succ√®s. C'est bien, mais pour √™tre plus complet,
           vous pourriez utiliser le partiel '_flash_messages.html.twig' comme dans la page de profil,
           qui g√®re tous les types de messages (success, error, warning, etc.). #}
        {% for message in app.flashes('success') %}
            <div class="alert alert-success">
                {{ message }}
            </div>
        {% endfor %}
        {# Vous pourriez aussi ajouter une boucle pour les messages d'erreur :
        {% for message in app.flashes('error') %}
            <div class="alert alert-danger">{{ message }}</div>
        {% endfor %}
        #}


        {# --- D√âBUT DU FORMULAIRE --- #}
        {# üõ°Ô∏è S√âCURIT√â MAJEURE : 'form_start(form)' fait bien plus que cr√©er la balise <form>.
           1. Il ajoute l'attribut method="POST".
           2. Il inclut automatiquement un champ cach√© contenant un **jeton anti-CSRF (Cross-Site Request Forgery)**.
              C'est une protection essentielle qui garantit que le formulaire a bien √©t√© soumis depuis votre site.
           
           ‚úÖ 'enctype': 'multipart/form-data' est ABSOLUMENT N√âCESSAIRE si votre formulaire permet de t√©l√©verser des fichiers (comme un avatar).
              M√™me si le champ n'est pas affich√© ici, sa pr√©sence sugg√®re que votre FormType le g√®re. #}
        {{ form_start(form, { 'attr': { 'enctype': 'multipart/form-data' } }) }}

            {# --- BLOC POUR LE PR√âNOM --- #}
            {# 'form_label' : Affiche le label (ex: "Pr√©nom"). Il est automatiquement li√© √† son champ d'input pour l'accessibilit√©. #}
            {# 'form_widget' : Affiche le champ de saisie (<input type="text"...>). Les classes Bootstrap sont ajout√©es via 'attr'. #}
            {# 'form_errors' : Affiche les messages d'erreur de validation pour CE champ sp√©cifique (ex: "Ce champ ne peut pas √™tre vide.").
                              Ces erreurs proviennent des contraintes que vous avez d√©finies en PHP (dans l'entit√© ou le FormType). #}
            <div class="mb-3">
                {{ form_label(form.prenom) }}
                {{ form_widget(form.prenom, { 'attr': {'class': 'form-control'} }) }}
                <div class="text-danger">
                    {{ form_errors(form.prenom) }}
                </div>
            </div>

            {# --- BLOC POUR LE NOM --- #}
            <div class="mb-3">
                {{ form_label(form.nom) }}
                {{ form_widget(form.nom, { 'attr': {'class': 'form-control'} }) }}
                <div class="text-danger">{{ form_errors(form.nom) }}</div>
            </div>

            {# --- BLOC POUR L'EMAIL --- #}
            <div class="mb-3">
                {{ form_label(form.email) }}
                {{ form_widget(form.email, { 'attr': {'class': 'form-control'} }) }}
                <div class="text-danger">{{ form_errors(form.email) }}</div>
            </div>

            {# --- BLOC POUR LE T√âL√âPHONE --- #}
            <div class="mb-3">
                {{ form_label(form.telephone) }}
                {{ form_widget(form.telephone, { 'attr': {'class': 'form-control'} }) }}
                <div class="text-danger">{{ form_errors(form.telephone) }}</div>
            </div>

            {# --- BLOC POUR LA DATE DE NAISSANCE --- #}
            <div class="mb-3">
                {{ form_label(form.dateNaissance) }}
                {{ form_widget(form.dateNaissance) }} {# Symfony choisit souvent le bon widget (ex: 3 listes d√©roulantes). #}
                <div class="text-danger">{{ form_errors(form.dateNaissance) }}</div>
            </div>

            {# --- EXEMPLE POUR UN CHAMP AVATAR (SI VOUS EN AVEZ UN) --- #}
            {# Si votre formulaire contient un champ pour l'avatar (ex: 'avatarFile'), voici comment l'afficher :
            <div class="mb-3">
                {{ form_label(form.avatarFile, 'Nouvel avatar (optionnel)') }}
                {{ form_widget(form.avatarFile, { 'attr': {'class': 'form-control'} }) }}
                <div class="form-text">Laissez vide pour conserver l'avatar actuel.</div>
                <div class="text-danger">{{ form_errors(form.avatarFile) }}</div>
            </div>
            #}

            {# --- BOUTONS D'ACTION --- #}
            <button type="submit" class="btn btn-primary">Enregistrer les modifications</button>
            {# 'path()' g√©n√®re l'URL pour retourner √† la page de profil, c'est la bonne pratique. #}
            <a href="{{ path('user_profile') }}" class="btn btn-secondary ms-2">Annuler</a>

        {# --- FIN DU FORMULAIRE --- #}
        {# 'form_end(form)' ferme la balise </form> et s'assure que tous les champs du formulaire (y compris les champs cach√©s comme le jeton CSRF) ont bien √©t√© rendus. #}
        {{ form_end(form) }}
    </div>
{% endblock %}