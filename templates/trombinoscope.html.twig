{# --- FICHIER TEMPLATE POUR LE TROMBINOSCOPE --- #}
{# templates/user/trombinoscope.html.twig #}

{# üèõÔ∏è On h√©rite de la structure de base du site. C'est la base de tout template Symfony/Twig. #}
{% extends 'base.html.twig' %}

{# ‚úèÔ∏è D√©finit le titre qui s'affichera dans l'onglet du navigateur. #}
{% block title %}Trombinoscope{% endblock %}

{# üìù C'est ici que commence le contenu principal de la page. #}
{% block body_content %}
{# 'container' centre le contenu et 'mt-4' ajoute une marge au-dessus (Margin-Top 4). #}
<div class="container mt-4">
    {# 'mb-4' ajoute une marge en dessous du titre (Margin-Bottom 4). #}
    <h1 class="mb-4">Trombinoscope</h1>

    {# --- GRILLE RESPONSIVE BOOTSTRAP --- #}
    {# 'row' initialise une nouvelle ligne de la grille. #}
    {# 'row-cols-1' : 1 colonne sur les √©crans tr√®s petits (par d√©faut). #}
    {# 'row-cols-sm-2' : 2 colonnes sur les petits √©crans (sm) et plus. #}
    {# 'row-cols-md-3' : 3 colonnes sur les √©crans moyens (md) et plus. #}
    {# 'row-cols-lg-4' : 4 colonnes sur les grands √©crans (lg) et plus. #}
    {# 'g-4' : Ajoute un espacement (gutter) de taille 4 entre les colonnes et les lignes. #}
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
        
        {# --- BOUCLE SUR LES UTILISATEURS --- #}
        {# On parcourt la liste des utilisateurs (la variable 'users' est pass√©e depuis le contr√¥leur). #}
        {# 'user_item' repr√©sente un utilisateur √† chaque tour de boucle. #}
        {% for user_item in users %}
            {# 'col' : D√©finit cet √©l√©ment comme une colonne de la grille. #}
            {# 'd-flex align-items-stretch' : Astuce Bootstrap pour que toutes les cartes de la m√™me ligne aient la m√™me hauteur, m√™me si leur contenu varie. #}
            <div class="col d-flex align-items-stretch">
                {# 'card' : Style de base de la carte Bootstrap. #}
                {# 'w-100' : La carte prend 100% de la largeur de sa colonne. #}
                {# 'text-center' : Centre le texte √† l'int√©rieur de la carte. #}
                {# 'shadow-sm' : Ajoute une ombre l√©g√®re et discr√®te. #}
                <div class="card w-100 text-center shadow-sm">
                    {# 'p-3' : Ajoute un padding (rembourrage int√©rieur) pour que l'image ne colle pas aux bords. #}
                    <div class="p-3">
                        
                        {# --- AFFICHAGE CONDITIONNEL DE L'AVATAR --- #}
                        {# On v√©rifie si l'utilisateur a un avatar personnalis√©. #}
                        {% if user_item.avatar %}
                            {# üñºÔ∏è CAS 1 : L'UTILISATEUR A UN AVATAR #}
                            {# 'asset()' est la fonction Twig INDISPENSABLE pour g√©n√©rer le bon chemin vers un fichier public. #}
                            {# '~' est l'op√©rateur de concat√©nation en Twig. On assemble le chemin et le nom du fichier. #}
                            <img src="{{ asset('uploads/avatars/' ~ user_item.avatar) }}" 
                                 {# 'img-fluid' : Rend l'image responsive, elle ne d√©passera jamais de son conteneur. #}
                                 {# 'rounded-circle' : Affiche l'image dans un cercle parfait. #}
                                 {# 'mx-auto' : Centre l'image horizontalement (Margin X-axis Auto). #}
                                 class="img-fluid rounded-circle mx-auto"
                                 {# üõ°Ô∏è L'attribut 'alt' est crucial pour l'accessibilit√© (lecteurs d'√©cran) et le SEO. #}
                                 alt="Avatar de {{ user_item.prenom }}"
                                 {# Optimisation : Ajoute l'attribut 'loading="lazy"' pour am√©liorer les performances. Voir explication plus bas. #}
                                 loading="lazy"
                                 style="max-width: 150px; object-fit: cover; aspect-ratio: 1 / 1;"> {# Style pour garantir une taille fixe et un affichage correct. #}
                        {% else %}
                            {# üñºÔ∏è CAS 2 : L'UTILISATEUR N'A PAS D'AVATAR #}
                            {# On affiche une image par d√©faut. 'asset()' est aussi utilis√© ici pour la robustesse. #}
                            <img src="{{ asset('images/default-avatar-icon-of-social-media-user-vector.jpg') }}" 
                                 class="img-fluid rounded-circle mx-auto" 
                                 alt="Avatar par d√©faut"
                                 loading="lazy"
                                 style="max-width: 150px; filter: grayscale(80%);"> {# 'filter' met l'image en niveaux de gris pour bien la diff√©rencier. #}
                        {% endif %}
                    </div>
                    <div class="card-body">
                        {# Affiche le pr√©nom et le nom. Twig les prot√®ge automatiquement contre les injections de code (voir explications). #}
                        <h5 class="card-title">{{ user_item.prenom }} {{ user_item.nom }}</h5>
                    </div>
                </div>
            </div>
        {# --- CAS O√ô IL N'Y A AUCUN UTILISATEUR --- #}
        {# Le bloc 'else' de la boucle 'for' s'ex√©cute si la variable 'users' est vide. C'est tr√®s pratique. #}
        {% else %}
            <div class="col">
                <p class="alert alert-info">Aucun utilisateur trouv√©.</p>
            </div>
        {% endfor %}
    </div>
</div>
{% endblock body_content %}

{# --- BLOC POUR LES FEUILLES DE STYLE CSS --- #}
{% block stylesheets %}
    {# 'parent()' est essentiel pour inclure les CSS du template de base. #}
    {{ parent() }}
    
    {# Ce bloc <style> est un bon endroit pour des ajustements mineurs sp√©cifiques √† la page. #}
    {# Pour des styles plus complexes, il est recommand√© de les mettre dans un fichier CSS s√©par√©. #}
    <style>
        /* J'ai l√©g√®rement modifi√© vos styles pour garantir que les images soient toujours carr√©es avant d'√™tre arrondies,
           m√™me si l'image originale n'est pas carr√©e. */
        .rounded-circle {
            width: 150px;       /* D√©finit une largeur fixe. */
            height: 150px;      /* D√©finit une hauteur fixe pour cr√©er un carr√©. */
            object-fit: cover;  /* Assure que l'image remplit l'espace sans se d√©former, en coupant les bords si n√©cessaire. C'est la meilleure m√©thode pour les avatars. */
        }
    </style>
{% endblock %}